<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.7.1.min.js" integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=" crossorigin="anonymous"></script>
  </head>
  <body>
    <form name="prac">
      <fieldset>
        <legend>환영합니다</legend>
        <input type="text" name="id" placeholder="아이디" /><br />
        <input type="text" name="userid" placeholder="유저아이디" /><br />
        <input type="text" name="name" placeholder="이름" /><br />
        <input type="password" name="password" placeholder="비밀번호" /><br /><br />
        <div class="btn-group">
          <button type="button" onclick="signUp()">회원가입</button>
          <button type="button" onclick="login()">로그인</button>
          <button type="button" onclick="updateLogin()">회원정보 수정</button>
          <button type="button" onclick="deleteLog()">회원정보 삭제</button>
        </div>

      </fieldset>
    </form>
    <h3 id="message2"></h3>

    <form action="/login" method="POST" name="prac2">
      <fieldset>
        <legend>환영합니다</legend>
        <input type="text" name="userid" placeholder="유저아이디" /><br />
        <input type="password" name="password" placeholder="비밀번호" /><br /><br />
        <button type="button" onclick="login()">로그인</button>
      </fieldset>
    </form>
    <h3 class="message4"></h3>
    <script>
      function signUp() {
        const form = document.forms["prac"]
        const data = {
          id: form.id.value,
          userid: form.userid.value,
          name: form.name.value,
          password: form.password.value
        }
        // aiox를 이용해 데이터를 서버로 전송
        axios({
          method: 'post',
          url: "/register",
          data: data
        }).then((res) => {
          const {
            id,
            userid,
            name,
            password
          } = res.data
        })
      }

      function deleteLog(id, TrElement) {
        axios({
          method: 'delete',
          url: `/visitor/${id}`
        }).then((res) => {
          console.log(res.data);

          if (res.data.result) {
            $(TrElement).remove();
          } else {
            alert("존재하지 않는 방명록입니다.");
          }
        })
      }

      function login() {
        const form = document.forms["prac2"]
        const data = {
          userid: form.userid.value,
          password: form.password.value
        }
        axios({
          method: "POST",
          url: "/login",
          data: data
        }).then((res) => {
          const {
            isSuccess,
            msg
          } = res.data
          console.log(isSuccess)
          if (isSuccess) {
            const element = document.querySelector(".message4");
            element.innerHTML = msg;
          } else {
            const element = document.querySelector(".message4");
            element.innerHTML = msg;
          }
        })
      }

      function updateLogin(id) {
        axios({
          method: 'patch',
          url: `/login/${id}`,
        }).then((res) => {
          const {
            userid,
            name,
            password
          } = res.data
          const form = document.forms['prac'];
          form.userid.value = userid;
          form.name.value = name;
          form.password.value = password;

          // [변경], [취소] 버튼 보이기
          $(".btn-group").html(`
            <button type='button' onclick='editDo(${id});'>변경</button>
            <button type='button' onclick='editCancel();'>취소</button>
          `)
        });
      }

      function editDo(id) {
        const form = document.forms['prac'];

        axios({
            method: 'patch',
            url: '/login',
            data: {
              id: id,
              userid: form.userid.value,
              name: form.name.value,
              password: form.password.value
            },
          })
          .then((res) => {
            console.log(res.data);
            return res.data;
          })
          .then((data) => {
            console.log($(`#tr_${id}`).children('td'));
            $(`#tr_${id}`).children('td:eq(1)').text(form.username.value);
            $(`#tr_${id}`).children('td:eq(2)').text(form.comment.value);

            // 입력창 초기화
            editCancel();
          });
      }

      function editCancel() {
        // (1) input 초기화
        const form = document.forms['prac'];
        form.id.value = '';
        form.userid.value = '';
        form.name.value = '';
        form.password.value = '';

        // (2) [등록] 버튼 보이기
        $(".btn-group").html(`<button type="button" onclick="signUp()">회원가입</button>
        <button type="button" onclick="login()">로그인</button>
        <button type="button" onclick="updateLogin()">회원정보 수정</button>
        <button type="button" onclick="deleteLog()">회원정보 삭제</button>`);
      }
    </script>
  </body>
</html>